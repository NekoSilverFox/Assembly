; 81 - ret指令
; =================================================================
; ret - 用栈中的数据 - 修改 IP - 实现近转移
; retf - 用栈中的数据 - 修改 CS：IP - 实现远转移
;
; cpu 在执行 ret 指令时，进行下面两步的操作
;	(IP) = ((ss)*16 + (sp))		--> pop ip
;	sp = sp + 2
;

; cpu 在执行retf指令时，进行下面4步操作
;	(IP) = ((ss)*16 + (sp))
;	(sp) = (sp) + 2			--> pop ip
;	(CS) = ((ss)*16 + (sp))
;	(sp) = (sp) + 2			--> pop cs
; ===============================================================

assume cs:codesg, ss:stacksg
; =================================================================
stacksg segment
		dw 16 dup (0)
stacksg ends
; =================================================================
codesg segment
		mov ax, 4c00h						; <<<========= 最终指向这里
		int 21h

start:		mov ax, stacksg
		mov ss, ax
		mov sp, 16

		mov ax, 0
		push ax
		mov bx, 0
		ret

codesg ends
; =================================================================
end start

; 代码执行后会指向程序段的第一条指令

; =================================================================;
